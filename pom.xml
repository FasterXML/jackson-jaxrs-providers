<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion> 
  <parent>
    <groupId>tools.jackson</groupId>
    <artifactId>jackson-base</artifactId>
    <version>3.0.0-rc5</version>
  </parent>

  <groupId>tools.jackson.jaxrs</groupId>
  <artifactId>jackson-jaxrs-providers</artifactId>
  <name>Jackson JAX-RS (parent)</name>
  <version>3.0.0-rc6-SNAPSHOT</version>
  <packaging>pom</packaging>
  <description>Parent for Jackson JAX-RS providers
  </description>

  <modules>
    <module>base</module>
    <module>datatypes</module>
    <module>cbor</module>
    <module>json</module>
    <module>smile</module>
    <module>xml</module>
    <module>yaml</module>
  </modules>
  <url>http://github.com/FasterXML/jackson-jaxrs-providers</url>    
  <scm>
    <connection>scm:git:git@github.com:FasterXML/jackson-jaxrs-providers.git</connection>
    <developerConnection>scm:git:git@github.com:FasterXML/jackson-jaxrs-providers.git</developerConnection>
    <url>http://github.com/FasterXML/jackson-jaxrs-providers</url>    
    <tag>HEAD</tag>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> 

    <!-- [databind#4820]: Java 17 baseline -->
    <javac.src.version>17</javac.src.version>
    <javac.target.version>17</javac.target.version>

    <!--  Need Jersey+Jetty for testing -->
    <version.jersey>2.45</version.jersey>
    <version.jetty>9.4.57.v20241219</version.jetty>

    <!-- Needed to enable jax-rs 2.0 usage under OSGi -->
    <javax.ws.rs.version>[2.0,2.2)</javax.ws.rs.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>2.3.3</version>
      </dependency>
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>2.1.1</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- and we need JAX-RS annotations for testing as well; but usually provided
      by container (and app should definitely have direct dep too, when using annotations)
       -->
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>javax.ws.rs-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${version.jetty}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${version.jetty}</version>
      <scope>test</scope>
    </dependency>
        
    <!-- tests require JAX-RS impl; otherwise components fail to load
        (some oddity with API classes; should NOT be needed...)
      -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${version.jersey}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>jakarta.ws.rs</groupId>
          <artifactId>jakarta.ws.rs-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.guava</groupId>
          <artifactId>guava</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>${version.jersey}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>jakarta.ws.rs</groupId>
          <artifactId>jakarta.ws.rs-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- 14-Oct-2024, tatu: Need this with Jersey 2.26+, as per
https://stackoverflow.com/questions/44088493/jersey-stopped-working-with-injectionmanagerfactory-not-found
      -->
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${version.jersey}</version>
      <scope>test</scope>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- Alas, need to include snapshot reference since otherwise can not find
       snapshot of parent... -->
  <!-- 14-Jul-2022, tatu: Worse. We need both "new" and "old" Snapshot repositories
       because "jackson-annotations" is published via "old"
    -->
  <repositories>
    <!-- 13-May-2025, tatu: and now moving to Central Portal -->
    <repository>
      <id>central-snapshots</id>
      <name>Sonatype Central Portal (snapshots)</name>
      <url>https://central.sonatype.com/repository/maven-snapshots</url>
      <releases><enabled>false</enabled></releases>
      <snapshots><enabled>true</enabled></snapshots>
    </repository>
    <repository>
      <id>sonatype-nexus-snapshots-old</id>
      <name>Sonatype Nexus Snapshots (old)</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases><enabled>false</enabled></releases>
      <snapshots><enabled>true</enabled></snapshots>
    </repository>
  </repositories>
  
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <configuration>
            <instructions>
              <_nouses>false</_nouses>
            </instructions>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
